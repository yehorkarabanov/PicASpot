"""create landmarks and unlocks tables

Revision ID: cec6f9bc90cc
Revises: 85232897085c
Create Date: 2025-10-29 09:44:37.304847

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from geoalchemy2 import Geography

# revision identifiers, used by Alembic.
revision: str = 'cec6f9bc90cc'
down_revision: Union[str, Sequence[str], None] = '85232897085c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_geospatial_table('landmarks',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('area_id', sa.Uuid(), nullable=False),
    sa.Column('created_by', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('image_url', sa.String(), nullable=False),
    sa.Column('location', Geography(geometry_type='POINT', srid=4326, dimension=2, spatial_index=False, from_text='ST_GeogFromText', name='geography', nullable=False), nullable=False),
    sa.Column('unlock_radius_meters', sa.Integer(), nullable=False),
    sa.Column('photo_radius_meters', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['area_id'], ['areas.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_landmark_area_creator', 'landmarks', ['area_id', 'created_by'], unique=False)
    op.create_geospatial_index('idx_landmark_location', 'landmarks', ['location'], unique=False, postgresql_using='gist', postgresql_ops={})
    op.create_geospatial_index('idx_landmarks_location', 'landmarks', ['location'], unique=False, postgresql_using='gist', postgresql_ops={})
    op.create_index(op.f('ix_landmarks_area_id'), 'landmarks', ['area_id'], unique=False)
    op.create_index(op.f('ix_landmarks_created_by'), 'landmarks', ['created_by'], unique=False)
    op.create_table('unlocks',
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('area_id', sa.Uuid(), nullable=False),
    sa.Column('landmark_id', sa.Uuid(), nullable=False),
    sa.Column('photo_url', sa.String(), nullable=False),
    sa.Column('posted_to_feed', sa.Boolean(), nullable=False),
    sa.Column('unlocked_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['area_id'], ['areas.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['landmark_id'], ['landmarks.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'area_id', 'landmark_id')
    )
    op.create_index('idx_unlock_area_landmark', 'unlocks', ['area_id', 'landmark_id'], unique=False)
    op.create_index('idx_unlock_area_unlocked_at', 'unlocks', ['area_id', 'unlocked_at'], unique=False)
    op.create_index('idx_unlock_feed_unlocked_at', 'unlocks', ['posted_to_feed', 'unlocked_at'], unique=False)
    op.create_index('idx_unlock_landmark_unlocked_at', 'unlocks', ['landmark_id', 'unlocked_at'], unique=False)
    op.create_index('idx_unlock_user_landmark', 'unlocks', ['user_id', 'landmark_id'], unique=False)
    op.create_index('idx_unlock_user_unlocked_at', 'unlocks', ['user_id', 'unlocked_at'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_unlock_user_unlocked_at', table_name='unlocks')
    op.drop_index('idx_unlock_user_landmark', table_name='unlocks')
    op.drop_index('idx_unlock_landmark_unlocked_at', table_name='unlocks')
    op.drop_index('idx_unlock_feed_unlocked_at', table_name='unlocks')
    op.drop_index('idx_unlock_area_unlocked_at', table_name='unlocks')
    op.drop_index('idx_unlock_area_landmark', table_name='unlocks')
    op.drop_table('unlocks')
    op.drop_index(op.f('ix_landmarks_created_by'), table_name='landmarks')
    op.drop_index(op.f('ix_landmarks_area_id'), table_name='landmarks')
    op.drop_geospatial_index('idx_landmarks_location', table_name='landmarks', postgresql_using='gist', column_name='location')
    op.drop_geospatial_index('idx_landmark_location', table_name='landmarks', postgresql_using='gist', column_name='location')
    op.drop_index('idx_landmark_area_creator', table_name='landmarks')
    op.drop_geospatial_table('landmarks')
    # ### end Alembic commands ###
