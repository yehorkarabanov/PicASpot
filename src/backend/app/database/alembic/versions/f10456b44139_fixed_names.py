"""Fixed names

Revision ID: f10456b44139
Revises: cec6f9bc90cc
Create Date: 2025-10-31 08:27:29.282570

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "f10456b44139"
down_revision: Union[str, Sequence[str], None] = "cec6f9bc90cc"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("areas", sa.Column("creator_id", sa.Uuid(), nullable=False))
    op.drop_index(op.f("ix_areas_created_by"), table_name="areas")
    op.drop_index(op.f("idx_area_creator_verified"), table_name="areas")
    op.create_index(
        "idx_area_creator_verified",
        "areas",
        ["creator_id", "is_verified"],
        unique=False,
    )
    op.create_index(op.f("ix_areas_creator_id"), "areas", ["creator_id"], unique=False)
    op.drop_constraint(op.f("areas_created_by_fkey"), "areas", type_="foreignkey")
    op.create_foreign_key(
        None, "areas", "users", ["creator_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_column("areas", "created_by")
    op.add_column("landmarks", sa.Column("creator_id", sa.Uuid(), nullable=False))
    op.add_column(
        "landmarks",
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
    )
    op.drop_index(op.f("ix_landmarks_created_by"), table_name="landmarks")
    op.drop_index(op.f("idx_landmark_area_creator"), table_name="landmarks")
    op.create_index(
        "idx_landmark_area_creator",
        "landmarks",
        ["area_id", "creator_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_landmarks_creator_id"), "landmarks", ["creator_id"], unique=False
    )
    op.drop_constraint(
        op.f("landmarks_created_by_fkey"), "landmarks", type_="foreignkey"
    )
    op.create_foreign_key(
        None, "landmarks", "users", ["creator_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_column("landmarks", "created_by")
    op.add_column(
        "unlocks", sa.Column("is_posted_to_feed", sa.Boolean(), nullable=False)
    )
    op.drop_index(op.f("idx_unlock_feed_unlocked_at"), table_name="unlocks")
    op.create_index(
        "idx_unlock_feed_unlocked_at",
        "unlocks",
        ["is_posted_to_feed", "unlocked_at"],
        unique=False,
    )
    op.drop_column("unlocks", "posted_to_feed")
    op.add_column(
        "users",
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
    )
    op.add_column(
        "users",
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("users", "updated_at")
    op.drop_column("users", "created_at")
    op.add_column(
        "unlocks",
        sa.Column("posted_to_feed", sa.BOOLEAN(), autoincrement=False, nullable=False),
    )
    op.drop_index("idx_unlock_feed_unlocked_at", table_name="unlocks")
    op.create_index(
        op.f("idx_unlock_feed_unlocked_at"),
        "unlocks",
        ["posted_to_feed", "unlocked_at"],
        unique=False,
    )
    op.drop_column("unlocks", "is_posted_to_feed")
    op.add_column(
        "landmarks",
        sa.Column("created_by", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "landmarks", type_="foreignkey")
    op.create_foreign_key(
        op.f("landmarks_created_by_fkey"),
        "landmarks",
        "users",
        ["created_by"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_index(op.f("ix_landmarks_creator_id"), table_name="landmarks")
    op.drop_index("idx_landmark_area_creator", table_name="landmarks")
    op.create_index(
        op.f("idx_landmark_area_creator"),
        "landmarks",
        ["area_id", "created_by"],
        unique=False,
    )
    op.create_index(
        op.f("ix_landmarks_created_by"), "landmarks", ["created_by"], unique=False
    )
    op.drop_column("landmarks", "updated_at")
    op.drop_column("landmarks", "creator_id")
    op.add_column(
        "areas", sa.Column("created_by", sa.UUID(), autoincrement=False, nullable=False)
    )
    op.drop_constraint(None, "areas", type_="foreignkey")
    op.create_foreign_key(
        op.f("areas_created_by_fkey"),
        "areas",
        "users",
        ["created_by"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_index(op.f("ix_areas_creator_id"), table_name="areas")
    op.drop_index("idx_area_creator_verified", table_name="areas")
    op.create_index(
        op.f("idx_area_creator_verified"),
        "areas",
        ["created_by", "is_verified"],
        unique=False,
    )
    op.create_index(op.f("ix_areas_created_by"), "areas", ["created_by"], unique=False)
    op.drop_column("areas", "creator_id")
    # ### end Alembic commands ###
