[project]
name = "backend"
version = "0.1.0"
description = "PicASpot backend"
requires-python = ">=3.14"
dependencies = [
    "alembic>=1.17.0",
    "asyncpg>=0.30.0",
    "celery>=5.5.3",
    "fastapi-mail>=1.5.2",
    "fastapi-users[sqlalchemy]>=14.0.1",
    "fastapi[standard]>=0.119.0",
    "geoalchemy2>=0.18.0",
    "pydantic-settings>=2.11.0",
    "redis>=6.4.0",
    "sqlalchemy>=2.0.44",
]


[project.optional-dependencies]
test = [
    "faker>=37.11.0",
    "pytest>=8.4.2",
]

[tool.isort]
profile = "black"
line_length = 88
skip_gitignore = true
known_first_party = ["app", "tests"]

[tool.ruff]
line-length = 88
target-version = "py314"
select = [
    "E",   # pycodestyle errors
    "F",   # Pyflakes
    "W",   # pycodestyle warnings
    "C90", # McCabe complexity
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "YTT", # flake8-2020
    "S",   # flake8-bandit
    "BLE", # flake8-blind-except
    "FBT", # flake8-boolean-trap
    "B",   # flake8-bugbear
    "A",   # flake8-builtins
    "COM", # flake8-commas
    "C4",  # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "T10", # flake8-debugger
    "DJ",  # flake8-django
    "EM",  # flake8-errmsg
    "EXE", # flake8-executable
    "FA",  # flake8-future-annotations
    "ISC", # flake8-implicit-str-concat
    "ICN", # flake8-import-conventions
    "G",   # flake8-logging-format
    "INP", # flake8-no-pep420
    "PIE", # flake8-pie
    "T20", # flake8-print
    "PYI", # flake8-pyi
    "PT",  # flake8-pytest-style
    "Q",   # flake8-quotes
    "RSE", # flake8-raise
    "RET", # flake8-return
    "SLF", # flake8-self
    "SLOT", # flake8-slots
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
    "TCH", # flake8-type-checking
    "INT", # flake8-gettext
    "ARG", # flake8-unused-arguments
    "PTH", # flake8-use-pathlib
    "ERA", # eradicate
    "PD",  # pandas-vet
    "PGH", # pygrep-hooks
    "PL",  # Pylint
    "TRY", # tryceratops
    "FLY", # flynt
    "NPY", # NumPy-specific rules
    "AIR", # airflow
    "PERF", # Perflint
    "FURB", # refurb
    "LOG", # flake8-logging
    "RUF", # Ruff-specific rules
]
ignore = [
    "S101", # assert used
    "COM812", # trailing comma missing
    "ISC001", # implicit string concatenation
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
